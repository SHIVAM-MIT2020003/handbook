
1. Lexicographic sorting:
    List<List<Integer>> ans = helper(A);
        Collections.sort(ans, (a, b) -> {
        int min = Math.min(a.size(), b.size());
        for (int i = 0; i < min; i++){
            if(a.get(i) != b.get(i)){
                if(a.get(i) < b.get(i)) return -1;
                else return 1;
            }
        }
        return a.size() <= b.size() ? -1 : 1;
    });




2. Checking whether it is possible to merge k stones into one until we left with one stone:
    boolean f(int N, int K){
        if((N - 1) % (K - 1) == 0) return true;
        else return false;
    }



3. Copy Array method:

    public boolean check(int length, int[] A, int[] B) {
        Set<String> seen = new HashSet();
        for (int i = 0; i + length <= A.length; ++i) {
            seen.add(Arrays.toString(Arrays.copyOfRange(A, i, i+length)));
        }
        for (int j = 0; j + length <= B.length; ++j) {
            if (seen.contains(Arrays.toString(Arrays.copyOfRange(B, j, j+length)))) {
                return true;
            }
        }
        return false;
    }


